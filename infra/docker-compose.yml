version: '3.8'

services:
  # db container
  db:
    image: postgres:13.0-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: corvette
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ../backend/.env

  # web container
  web:
    # image: inferno2f/foodgram:latest
    build:
      dockerfile: Dockerfile
      context: ..
    restart: always
    command: >
      bash -c "python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      python manage.py runscript load &&
      gunicorn --bind 0:8000 foodgram.wsgi"
    volumes:
      - static_value:/app/backend/static/
      - media_value:/app/backend/media/
    depends_on:
      - db
    env_file:
      - ../backend/.env
  
  # fronted container
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    image: nginx:1.19.3
    # ports:
    #   - "80:80"
    # volumes:
    #   - ./nginx.conf:/etc/nginx/conf.d/default.conf
    #   - ../frontend/build:/usr/share/nginx/html/
    #   - ../docs/:/usr/share/nginx/html/api/docs/
    ports:
      - 8001:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/redoc.html:/usr/share/nginx/html/api/docs/redoc.html
      - ../docs/openapi-schema.yml:/usr/share/nginx/html/api/docs/openapi-schema.yml
      - static_value:/var/html/static/
      - media_value:/var/html/media/

volumes:
  static_value:
  media_value:
  postgres_data: