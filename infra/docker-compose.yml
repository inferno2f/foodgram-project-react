version: '3.8'

services:
  # db container
  db:
    image: postgres:13.0-alpine
    env_file:
      - ../.env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 2s
      timeout: 2s
      retries: 5


  # backend container
  backend:
    image: inferno2f/foodgram:latest
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
    restart: always
    command: ["sh", "docker-entrypoint.sh"]
    volumes:
      - static_value:/app/backend_static/
      - media_value:/app/backend_media/
    env_file:
      - ../.env
  
  # fronted container
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/:/app/result_build/

  nginx:
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/


volumes:
  static_value:
  media_value:
  postgres_data: